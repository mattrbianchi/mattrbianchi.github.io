<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on mattrbianchi</title>
    <link>http://blog.mattrbianchi.com/post/index.xml</link>
    <description>Recent content in Posts on mattrbianchi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Jan 2017 07:01:50 -0400</lastBuildDate>
    <atom:link href="http://blog.mattrbianchi.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>treat your brain like a codebase</title>
      <link>http://blog.mattrbianchi.com/post/treat-your-brain-like-a-codebase/</link>
      <pubDate>Tue, 24 Jan 2017 07:01:50 -0400</pubDate>
      
      <guid>http://blog.mattrbianchi.com/post/treat-your-brain-like-a-codebase/</guid>
      <description>&lt;p&gt;This post stems from me finding this &lt;a href=&#34;https://youtu.be/FKTxC9pl-WM?list=PL3NQHgGj2vtuWPOxUMGwvRuEB0KVg-UXT&#34;&gt;conference talk&lt;/a&gt;. It would be best for you to watch it first and then come back but don&amp;rsquo;t worry, it&amp;rsquo;s pretty funny and really enlightening.&lt;/p&gt;

&lt;p&gt;Now, after watching that talk, I realized that ever since I started to learn how to program, I was dying the death of a thousand micro-leaks because there was so much I didn&amp;rsquo;t know. We&amp;rsquo;ve all been in that boat before: &amp;ldquo;Well, real programmers use the terminal.&amp;rdquo; So Matt does his best to learn the terminal, while trying to learn how to code &lt;em&gt;and&lt;/em&gt; learn the concepts of computer architecture &lt;em&gt;and&lt;/em&gt; keep up with engineering physics &lt;em&gt;and&amp;hellip;&lt;/em&gt; You get my point. Yeah, I learned &lt;code&gt;ls&lt;/code&gt;. And of course I learned the material in my classes. But I was no where near mastering a terminal. _ I was piling up on B_. And I was in double trouble because I was so concerned with everything I didn&amp;rsquo;t know that the things I thought I &lt;em&gt;did&lt;/em&gt; know ended up in the &amp;ldquo;Half-assed on C&amp;rdquo; category. &amp;ldquo;Ok, Matt, I get it&amp;hellip; you&amp;rsquo;re an idiot. What did you do about it?&amp;rdquo; Please, read on.&lt;/p&gt;

&lt;p&gt;As a programmer, we get pulled all kinds of different ways with what we should or shouldn&amp;rsquo;t know. So the first task that Kathy issues us with in that video is pulling stuff off B. All during college, I found odd jobs writing programs for various companies. So in college, I was writing mainly Java with some Python, C++, and even less C. But I would take semesters off through a co-op program and dive into C# and the .NET framework because evidently that&amp;rsquo;s the only thing people in Alabama will pay programmers do. &lt;em&gt;Seriously, my friend and I refer to the area as the .NET belt in a very distasteful manner&lt;/em&gt;. These programs would be websites (because everything is a website now) so they also needed HTML, CSS, and of course JS skills. Then, to top it off, I&amp;rsquo;m one of those people who have the bad habit of seeing everything as a challenge and so the &amp;ldquo;Real programmers do X&amp;rdquo; statements really got to me. &amp;ldquo;Real programmers are all doing mobile development&amp;rdquo;. So I dove into the Android environment until I saw the divine light and gave my soul to Apple, but then in order to be a &lt;em&gt;real programmer&lt;/em&gt; I needed to now learn the iOS environment. &amp;ldquo;Real programmers learn vim&amp;rdquo;. &amp;ldquo;Real programmers program on a *nix environment&amp;rdquo;. It&amp;rsquo;s funny that Kathy refers to compensating with food, because that&amp;rsquo;s exaclty what I did during this time. Then, the nail in the coffin was my last semester. That semester was the most rewarding in my undergrad, but it was not a walk in the park. One class was using F#, the other Python and Java, we decided on Rails for our senior design project (I would also end up the sole developer of the iOS app, where I lost a week of sleep learning the new swift language because that&amp;rsquo;s what real iOS programmers do), and we were goaded by another &amp;ldquo;Real programmers write documents in LaTeX&amp;rdquo; statement so by god our senior project documentation would be an immaculate PDF written in LaTeX.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t get me wrong, this extreme tour I put myself through was a great self discovering process. It was not however a healthy one. I gained 40lbs over my undergrad and ended up losing 20lbs of that my last semester because I only had time for a big breakfast in the morning and what I still affectionately call my coffee lunches. All this focus and time wasted could have been better used had I not piled up on B. Before encountering this talk, I had already finished The Pragmatic Programmer which advises a developer to pick their tools wisely and stick with them, especially your text editor. So I was already pulling stuff off B by working a full time job in one language and finally taking on one editor, vim, even though I didn&amp;rsquo;t know I was doing it at the time. But I still struggled with encountering things I didn&amp;rsquo;t know in vim, in git, in a shell, etc. But when working a full time job, I felt pressured to deliver and sitting down to learn would pull me away from getting something delivered. This is where this talk really changed my process.&lt;/p&gt;

&lt;p&gt;Kathy made me realize that I could look at improving my skills like improving a codebase. I immediately made a Trello board with columns &amp;ldquo;Can&amp;rsquo;t Do&amp;rdquo;, &amp;ldquo;Learning&amp;rdquo;, and &amp;ldquo;Mastered&amp;rdquo;. While at work, if I came upon something I couldn&amp;rsquo;t do in vim where I had to break down and use another editor, I immediately put that &amp;ldquo;issue&amp;rdquo; into my Can&amp;rsquo;t Do column. Then I could track what I didn&amp;rsquo;t know and come back to it after I was done bringing a previous skill into the Mastered column and effectively closing it out. This has brought my productivity and capability to another level where I am finally comfortable with git, the shell, vim, and even another editor that I&amp;rsquo;ve made my main text editor. I also concentrated all my efforts into one programming language, Go, which has given me the priviledge to work in it full time. And finally, to fix my &amp;ldquo;Half-assed on C&amp;rdquo; I&amp;rsquo;m going back to school for my masters through the OMSCS program at Georgia Tech. With having git, the shell, an editor, and the language I use at work officially under my belt, I plan to keep my focus strictly on this masters degree where I can bring the concepts of computer science I left on B to C.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>get started with acme</title>
      <link>http://blog.mattrbianchi.com/post/get-started-with-acme/</link>
      <pubDate>Thu, 20 Oct 2016 15:36:17 -0400</pubDate>
      
      <guid>http://blog.mattrbianchi.com/post/get-started-with-acme/</guid>
      <description>

&lt;p&gt;Now that I&amp;rsquo;ve blabbed about how cool I think Acme is, I hope this post will help guide anyone else who is interested in trying this unique editor.&lt;/p&gt;

&lt;h2 id=&#34;installing-acme&#34;&gt;Installing Acme&lt;/h2&gt;

&lt;h3 id=&#34;mac&#34;&gt;Mac&lt;/h3&gt;

&lt;p&gt;Use Homebrew to install the Plan 9 tools like so: &lt;code&gt;brew install plan9port&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt;

&lt;p&gt;Honestly I found it really easy to build from source following these &lt;a href=&#34;https://swtch.com/plan9port/man/man1/install.html&#34;&gt;instructions.&lt;/a&gt;&lt;br /&gt;
I did need to install the recommended &lt;code&gt;xorg-dev&lt;/code&gt; package which was also painless.&lt;/p&gt;

&lt;h2 id=&#34;running-acme&#34;&gt;Running Acme&lt;/h2&gt;

&lt;p&gt;All of these command line utilities are nicely tucked under the &lt;code&gt;9&lt;/code&gt; command. This is to avoid problems with the fact that Plan 9 has it&amp;rsquo;s own &lt;code&gt;ls&lt;/code&gt; and so forth. So to run Acme with the default settings, just give your Terminal &lt;code&gt;9 acme&lt;/code&gt;. An Acme window should pop up, it could be blank or it could be loaded. Go ahead and make Acme full screen or its own desktop, I like to do the latter.&lt;/p&gt;

&lt;h2 id=&#34;the-start-of-a-beautiful-friendship&#34;&gt;The Start of a Beautiful Friendship&lt;/h2&gt;

&lt;p&gt;Acme will have a window open, showing all the files and directories that exist in the location it was opened. Ahhh&amp;hellip; soak in the rays of that beautiful, yellow and blue background goodness. Bask in the glorious shock of proportional fonts in a text editor. Yeah, you know you like it. Now it&amp;rsquo;s time to watch the intro video, &lt;a href=&#34;https://www.youtube.com/watch?v=dP1xVpMPn8M&#34;&gt;A Tour of the Acme Editor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s impressive how the intro video is actually able to cover every movement in Acme. Now you should be able to start messing around in Acme and when you forget something, go back to the video. I&amp;rsquo;ve watched it countless times because I would forget something I saw in the video before I actually had an opportunity to apply it. If you still think Acme could be your editor after this video, I&amp;rsquo;ve got some next steps for you.&lt;/p&gt;

&lt;h2 id=&#34;homework&#34;&gt;Homework&lt;/h2&gt;

&lt;p&gt;Read the whole series that Brian Zwahr wrote on his &lt;a href=&#34;http://echosa.github.io/blog/2014/06/18/lets-try-acme-ep-0-research/&#34;&gt;trial of Acme&lt;/a&gt;. It actually ends with him deciding &lt;em&gt;not&lt;/em&gt; to choose Acme, which I think will be good for you to read. Reading his journey actually made it easier for me to decide that I really wanted to try Acme because I got to see his points and figure out for myself if those were deal breakers for me, too. It also told me what to look out for in Acme, which I will cover after you&amp;rsquo;ve read the series. Now go!&lt;/p&gt;

&lt;p&gt;Ok, so a few things about that series. The first being his struggles with mouse chording on a trackpad. I don&amp;rsquo;t know if his version of Acme didn&amp;rsquo;t have this or not, but I can &lt;code&gt;Cut&lt;/code&gt;, &lt;code&gt;Copy&lt;/code&gt;, and &lt;code&gt;Paste&lt;/code&gt; with the typical keyboard commands we Mac users have all come to love.&lt;/p&gt;

&lt;p&gt;That leaves one mouse chord that isn&amp;rsquo;t possible, the 2-1 chord. This is the chord that executes whatever you have middle clicked and sends whatever you last highlighted as the argument. I currently have found only one typical need of this in my day to day and that&amp;rsquo;s &lt;code&gt;git commit -m &amp;quot;message&amp;quot;&lt;/code&gt; where &lt;code&gt;&amp;quot;message&amp;quot;&lt;/code&gt; needs to be an argument in order to work, &lt;em&gt;for me at least&lt;/em&gt;. So if I&amp;rsquo;m on my laptop and writing code, &lt;em&gt;which is seldom nowadays&lt;/em&gt;, I swap to a terminal for this one command and go about my work. I also made sure to buy an awesome bluetooth mouse so this situation rarely shows up for me.&lt;/p&gt;

&lt;p&gt;Now Brian is definitely right about Acme using the Plan 9 versions of all the command line tools. If you tell Acme to execute &lt;code&gt;ls&lt;/code&gt;, it&amp;rsquo;s using Plan 9&amp;rsquo;s &lt;code&gt;ls&lt;/code&gt;, but type something like &lt;code&gt;which vim&lt;/code&gt; and you&amp;rsquo;ll see the one originally on your mac. This is easy to see by having Acme run something like &lt;code&gt;which ls&lt;/code&gt; and seeing the path direct you to the directory where Plan 9 from Userspace is installed.&lt;/p&gt;

&lt;p&gt;This &lt;strong&gt;is&lt;/strong&gt; concerning for us peeps who don&amp;rsquo;t know Plan 9 tools. I&amp;rsquo;m assuming there has to be a way to point Acme to the tools we&amp;rsquo;re more familiar with, but I haven&amp;rsquo;t found it yet. Honestly, it hasn&amp;rsquo;t bothered me enough. If I really need to exercise some shell-foo, I open up a Mac terminal and take full advantage of what Fish gives me there. But this is a concern and you have been warned.&lt;/p&gt;

&lt;h2 id=&#34;one-mouse-to-rule-them-all&#34;&gt;One Mouse to Rule Them ALL&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;ve gotten this far and would still like to continue using Acme as your editor of choice, huh? Well, it&amp;rsquo;s time to get a three button mouse. I used an old Sun Microsystems mouse for a while, but I couldn&amp;rsquo;t function in a modern OS without a scroll wheel.&lt;/p&gt;

&lt;p&gt;A lot of Acme users seem to use an &lt;a href=&#34;https://evoluent.com&#34;&gt;Evoluent Mouse&lt;/a&gt;, but I decided to try the Logitech MX Master mouse. While it doesn&amp;rsquo;t actually have three buttons, the magnificent scroll wheel is huge and flat so I can click it with ease. I also set the scroll to &amp;ldquo;ratchet mode&amp;rdquo; and turn off smooth scrolling so that the scroll wheel doesn&amp;rsquo;t scroll the window without quite a distinct motion.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Look, I know it sounds weird, but the other selling points for this mouse were too good. It can remember three different connections, has a horizontal scroll wheel, and a thumb button for moving between Mac workspaces. So I&amp;rsquo;ve learned some middle clicking foo. &lt;strong&gt;They do say the best relationships take effort.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;carry-on-my-wayward-son&#34;&gt;Carry On My Wayward Son&lt;/h2&gt;

&lt;p&gt;There it is. My current knowledge on getting started with Acme. I still intend on making at least a couple more posts, as I need to talk a lot more about some of the intermediate features of Acme and outstanding issues I have. But you should now have a great start until then. &lt;a href=&#34;https://www.youtube.com/watch?v=2X_2IdybTV0&#34;&gt;So carry on.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>first impressions of acme</title>
      <link>http://blog.mattrbianchi.com/post/first-impressions-of-acme/</link>
      <pubDate>Mon, 26 Sep 2016 15:33:33 -0400</pubDate>
      
      <guid>http://blog.mattrbianchi.com/post/first-impressions-of-acme/</guid>
      <description>

&lt;p&gt;I suppose that after learning Go and falling in love with the community around it, it was inevitable that I would find Acme, Rob Pike&amp;rsquo;s and Russ Cox&amp;rsquo;s editor of choice, and shamelessly install it like the crazy fan boy I am. And I&amp;rsquo;m sure glad I did!&lt;/p&gt;

&lt;h3 id=&#34;join-me-for-a-nice-brew&#34;&gt;Join Me for a Nice Brew&lt;/h3&gt;

&lt;p&gt;My first pleasant discovery was how easy it was to install this gem. If you&amp;rsquo;re on a Mac, it&amp;rsquo;s as easy as &lt;code&gt;brew install plan9port&lt;/code&gt;, which actually provides you with all the tools from Plan 9, &lt;em&gt;or so I&amp;rsquo;ve heard&lt;/em&gt;. Since a lot of these tools keep the same name as their Unix cousins, they are &amp;ldquo;name-spaced&amp;rdquo; under the &lt;code&gt;9&lt;/code&gt; command to avoid colliding with your native binaries. Therefore, opening Acme is as simple as &lt;code&gt;9 acme&lt;/code&gt;. Then you might see my first &amp;ldquo;furrowed brow moment&amp;rdquo; with the editor: sometimes Acme will load as a blank screen. But I quickly figured out that it fixes itself after resizing the window &lt;em&gt;and this editor is best used at full screen&lt;/em&gt;, so no actual UX heart burn there. Also, if you watch the Plan 9 intro video I link at the bottom, you might come to the same conclusion I have: resizing the window has a lot to do with when Acme loads.&lt;/p&gt;

&lt;p&gt;Ok, so now I have Acme installed and running on my Mac. What&amp;rsquo;s next? Well I initially learned a few moves and concepts for Acme from Russ Cox&amp;rsquo;s intro video, which I also have linked below. Remarkably, the intro video covers &lt;strong&gt;a lot&lt;/strong&gt; about how you interact with Acme in about twenty minutes and it&amp;rsquo;s all very easy to remember. So my second &amp;ldquo;wow&amp;rdquo; moment was how well I could move around and work in Acme compared to the first spartan editor I&amp;rsquo;ve attempted to learn, &lt;em&gt;with some success&lt;/em&gt;, Vim. Acme is &lt;strong&gt;much&lt;/strong&gt; easier to learn than Vim.&lt;/p&gt;

&lt;h3 id=&#34;the-mouse-in-the-stone-or-uhh-box&#34;&gt;The Mouse in the Stone (or uhh&amp;hellip; Box)&lt;/h3&gt;

&lt;p&gt;After watching Russ Cox&amp;rsquo;s video on Acme, I knew about the suggestion to use a three button mouse. If your scroll wheel clicks (&lt;em&gt;most of them do&lt;/em&gt;) this can serve as your middle button if you want to give this editor a test drive. But when I try something, I dive right in and that meant finding a three button mouse somehow, some way, at work. Luckily, we have one of those boxes at work. Yeah. You know what I&amp;rsquo;m talking about. &lt;strong&gt;That&lt;/strong&gt; box. The one that holds the peripherals your boss&amp;rsquo;s boss probably used to sling code before you were but a twinkle in your parents&amp;rsquo; eyes. In that box, I found a working (&lt;em&gt;important&lt;/em&gt;), clean (&lt;em&gt;super important&lt;/em&gt;) Sun Microsystems three button mouse. It was soul crushing grey, still used a track ball, but somehow had the most satisfying click I&amp;rsquo;ve ever experienced. It was simple, it was old, yet oddly pleasant. It matched Acme perfectly.&lt;/p&gt;

&lt;h3 id=&#34;indentation-and-fonts-and-scrolling-oh-my&#34;&gt;Indentation, and Fonts, and Scrolling, Oh My!&lt;/h3&gt;

&lt;p&gt;With my weapon of choice in hand, it was time to take what I had learned from Russ Cox and try to do some work. Unfortunately, this is where we get to a bumpy part in the road for this narrative. Currently, I am on a web project that is mostly HTML and JavaScript. I do not advise trying to edit HTML as your first task in Acme. You see, Acme has no syntax highlighting. It uses a proportional font &lt;strong&gt;by default&lt;/strong&gt;. The &lt;code&gt;TAB&lt;/code&gt; key will insert a literal &lt;code&gt;TAB&lt;/code&gt; character worth the width of 4 zeros in this proportional font which means if someone used spaces for indentation your &lt;code&gt;TAB&lt;/code&gt;s won&amp;rsquo;t line up. &lt;em&gt;The up and down arrow keys scroll the window for God&amp;rsquo;s sake&lt;/em&gt;. I know the programmers who started with Python just heard the word &lt;code&gt;TAB&lt;/code&gt; and are recovering from their minor faint, but I have more to say so please get some air and prop up your feet.&lt;/p&gt;

&lt;p&gt;Trying to edit that darn HTML file was the most annoying point so far in my journey to learn Acme. I knew I needed to learn more about &lt;strong&gt;how&lt;/strong&gt; to use Acme to get around these pain points, so I went to the internet. First, I found out about the &lt;code&gt;-a&lt;/code&gt; flag, which tells Acme to copy the whitespace from the previous line to the next line. This means it will copy any spaces, too, which I didn&amp;rsquo;t realize at the time. &lt;em&gt;Let&amp;rsquo;s just say much profanity was used&lt;/em&gt;. But then, I found a blog post series by someone who recorded their trial of Acme and two discussions on the 9fans mailing list that helped me both grok and use Acme. Like the other resources, they are linked below.&lt;/p&gt;

&lt;h3 id=&#34;the-knights-who-say-no&#34;&gt;The Knights Who Say&amp;hellip; No!&lt;/h3&gt;

&lt;p&gt;In the first mailing list discussion, Russ Cox answers a list of questions about how to do a lot of the things other editors can do, in Acme. The answer was mostly &amp;ldquo;just say no&amp;rdquo;. I find it amusing that, just like in our actual practice of writing software, we should say no to some of the ideas imposed upon us on how to literally type out our software. In his brief answers, Russ Cox carries a lot of un-emphasized proverbs for interacting with text, so much so that I will have to write about it in a second post.&lt;/p&gt;

&lt;h3 id=&#34;wax-on&#34;&gt;Wax On&amp;hellip;&lt;/h3&gt;

&lt;p&gt;The second discussion was an amazing share of &lt;code&gt;Edit&lt;/code&gt; &amp;ldquo;scriptlets&amp;rdquo;. &lt;code&gt;Edit&lt;/code&gt; is an Acme command that takes a form of regular expression, &lt;em&gt;very similar to Vim&amp;rsquo;s :% command&lt;/em&gt;, to describe what to substitute for something else in a file. While I had already used &lt;code&gt;Edit&lt;/code&gt; a little bit, these scripts allowed me to really broaden my &amp;ldquo;&lt;code&gt;Edit&lt;/code&gt; foo&amp;rdquo; and do some desperately needed things like replacing 4 spaces with a &lt;code&gt;TAB&lt;/code&gt; and moving selected text in or out one &lt;code&gt;TAB&lt;/code&gt;. While Vim or Emacs users are probably laughing right now that a regular expression is needed to indent a block of code, I appreciate the simplicity and the application easily scales to powerful transformations.&lt;/p&gt;

&lt;h3 id=&#34;as-close-as-a-muggle-can-get&#34;&gt;As Close as a Muggle Can Get&lt;/h3&gt;

&lt;p&gt;Finally, the blog post series gave me some practical tips, like how Acme can &lt;code&gt;Dump&lt;/code&gt; its current set up into a file to be &lt;code&gt;Load&lt;/code&gt;ed later. This feature is absolutely amazing. At the end of the day, I can just &lt;code&gt;Dump&lt;/code&gt; my window set up, &lt;code&gt;Load&lt;/code&gt; it in the morning, and hit the ground running again. No more morning window dragging for me.&lt;/p&gt;

&lt;p&gt;Another nifty tip is keeping a scratch file. This is a file you write to disk with all the relevant shell commands you normally execute day to day and when working on a specific project. That way, the text is right there for you to tell Acme to run. Oh yeah, did I fail to mention that part? Every bit of text in Acme can be sent to your shell as a command to be executed. Then any output from that command gets &lt;code&gt;echo&lt;/code&gt;ed back to an Acme window. Then &lt;strong&gt;that&lt;/strong&gt; text gives you more possible shell commands. It&amp;rsquo;s a very productive feedback loop and a great experience I believe Emacs users can sympathize with. If you don&amp;rsquo;t completely understand what I mean, just know I feel like Harry Potter and my mouse is fresh out of Ollivander&amp;rsquo;s. I&amp;rsquo;ll leave the explaining to Russ Cox&amp;rsquo;s intro video, considering he has ten or more years of experience and I&amp;rsquo;m still over here waving my mouse around like an idiot, trying to learn &amp;ldquo;Alohomora&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;the-neverending-story&#34;&gt;The Neverending Story&amp;hellip;&lt;/h3&gt;

&lt;p&gt;To summarize, some of the reasons why I wanted to try Acme and why I&amp;rsquo;m sticking with Acme: I can come into work in the morning, &lt;code&gt;Load&lt;/code&gt; my project file, and I&amp;rsquo;m instantly thrown back into the context I lost overnight. Having the window locations open back up in the same locations they were before really helps me ramp up faster on where I left off. Then, without swapping to a terminal, I can send some commands from Acme to start up my web server or my test suite and start coding. It&amp;rsquo;s really a tiling window manager meets task manager instead of a text editor, but with zero need for configuration. That&amp;rsquo;s probably the best feature, the fact that I didn&amp;rsquo;t need to spend any time configuring Acme to be impressively productive.&lt;/p&gt;

&lt;p&gt;And I haven&amp;rsquo;t even touched on how extensible this truly unique editor is. Maybe in another post.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dP1xVpMPn8M&#34;&gt;A Tour of the Acme Editor&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://echosa.github.io/blog/2014/06/18/lets-try-acme-ep-0-research/&#34;&gt;Lets Try Acme&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://groups.google.com/d/msg/comp.os.plan9/7KGswJEWd7c/QxulBRqrwgoJ&#34;&gt;Acme Edit scriptlets&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://groups.google.com/d/msg/comp.os.plan9/_YUEVbTFuME/tJHB8y8-0vYJ&#34;&gt;Using the Acme Editor&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=fGnpNlhv6po&#34;&gt;Plan 9 - Thursday Night Tech Talks&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>go is my spirit language</title>
      <link>http://blog.mattrbianchi.com/post/go-is-my-spirit-language/</link>
      <pubDate>Fri, 22 Jul 2016 15:10:16 -0400</pubDate>
      
      <guid>http://blog.mattrbianchi.com/post/go-is-my-spirit-language/</guid>
      <description>&lt;p&gt;When I reveal my love for Go to fellow programmers, I often get inquired as to how this language could make me so passionate and exuberant. My response is usually to take a deep breath in preparation for what, &lt;em&gt;in my mind&lt;/em&gt;, can only be an &lt;strong&gt;excellent&lt;/strong&gt; delivery of my thoughts on Go. But what comes next is silence as I realize I don&amp;rsquo;t know what to lead with, followed by blurting anything that comes to mind like a rambling maniac.&lt;/p&gt;

&lt;p&gt;I get raised eyebrows, thoughtful frowns, but the worst is silence. I stop talking as the acknowledgement that I&amp;rsquo;ve failed swoops over me and I turn my focus to my lunch, maybe asking a question to change the conversation. But now I think I can finally put my finger on it.&lt;/p&gt;

&lt;p&gt;Go is my spirit language. It resonates with me. After only a week of learning the syntax, I started to think in Go. In my mind, I became Pocahontas of the computer and I&amp;rsquo;m &lt;em&gt;painting with all the colors of the wind&lt;/em&gt;, my friend.&lt;/p&gt;

&lt;p&gt;So, please, come run the hidden pine trails of interfaces. Come taste the sun sweet berries of cross-platform. Come roll in all the riches of multiple threads, and for once&amp;hellip; never wonder what they&amp;rsquo;re worth. The format tool and the compiler are my brothers, the community and the gopher are my friends! And we are all connected to each other, in a circle, in a loop that never ends. How much skill can one grow with Go? If you cut it down, then you&amp;rsquo;ll never know. And you&amp;rsquo;ll never lose the worry about unused imports or whether tabs or spaces are better. We need to sing with all the cores of the CPU &amp;ndash; need to program with all the colors of the wind. You can keep on coding and still all you&amp;rsquo;ll know is coding until you can program with all the colors of the wiiiiiiiiiiiiiiiiiiiiind.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Magically changes into a gopher, kisses you on the forehead, and skips off &amp;ndash; yelling back to you: &amp;ldquo;Try the Tour of Go, you won&amp;rsquo;t regret it!&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>